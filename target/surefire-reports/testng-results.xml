<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-03T08:48:46 BST" name="Surefire suite" finished-at="2024-06-03T08:52:25 BST" duration-ms="219737">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:cucumber.CucumberTestRunner@1c1bbc4e]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-06-03T08:48:46 BST" name="Surefire test" finished-at="2024-06-03T08:52:25 BST" duration-ms="219737">
      <class name="cucumber.CucumberTestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:cucumber.CucumberTestRunner@1c1bbc4e]" started-at="2024-06-03T08:48:46 BST" name="setUpClass" finished-at="2024-06-03T08:48:46 BST" duration-ms="512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@52621501]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:cucumber.CucumberTestRunner@1c1bbc4e]" started-at="2024-06-03T08:48:46 BST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-06-03T08:49:00 BST" duration-ms="13954" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Maintenance Alert Clear"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Clearing the Alert"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//textarea[@type='text'])[1]"}
  (Session info: chrome=125.0.6422.113)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4035962332188413b5fa803b157ff7fb, findElement {value=(//textarea[@type='text'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.113, chrome: {chromedriverVersion: 125.0.6422.141 (4b1e8393712..., userDataDir: C:\Users\smettu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53785}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53785/devtoo..., se:cdpVersion: 125.0.6422.113, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4035962332188413b5fa803b157ff7fb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//textarea[@type='text'])[1]"}
  (Session info: chrome=125.0.6422.113)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4035962332188413b5fa803b157ff7fb, findElement {value=(//textarea[@type='text'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.113, chrome: {chromedriverVersion: 125.0.6422.141 (4b1e8393712..., userDataDir: C:\Users\smettu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53785}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53785/devtoo..., se:cdpVersion: 125.0.6422.113, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4035962332188413b5fa803b157ff7fb
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy23.sendKeys(Unknown Source)
at srimettu.pageobjects.Dashboard.mAlarmClear(Dashboard.java:62)
at srimettu.stepDefinitions.StepDefenitionImpl.Maintenance_Alert_is_cleared(StepDefenitionImpl.java:50)
at âœ½.Maintenance Alert is cleared with reason Maintenace alert Clear test(file:///C:/Users/smettu/CI-CD/src/test/java/cucumber/ClearAlert.feature:13)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:cucumber.CucumberTestRunner@1c1bbc4e]" started-at="2024-06-03T08:49:00 BST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-06-03T08:49:08 BST" duration-ms="7698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Beacon Alert Clear"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Clearing the Alert"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:cucumber.CucumberTestRunner@1c1bbc4e]" started-at="2024-06-03T08:49:08 BST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-06-03T08:49:11 BST" duration-ms="3043" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Invalid Login check"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Check"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:cucumber.CucumberTestRunner@1c1bbc4e]" started-at="2024-06-03T08:49:11 BST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-06-03T08:51:55 BST" duration-ms="164548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Loading the devices from Hub"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Device Management Page"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:cucumber.CucumberTestRunner@1c1bbc4e]" started-at="2024-06-03T08:51:55 BST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-06-03T08:52:06 BST" duration-ms="10647" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Edit Device"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Device Management Page"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:cucumber.CucumberTestRunner@1c1bbc4e]" started-at="2024-06-03T08:52:06 BST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-06-03T08:52:15 BST" duration-ms="8589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add Beacon"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Device Management Page"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:cucumber.CucumberTestRunner@1c1bbc4e]" started-at="2024-06-03T08:52:15 BST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-06-03T08:52:25 BST" duration-ms="10538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Edit Device"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Device Management Page"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:cucumber.CucumberTestRunner@1c1bbc4e]" started-at="2024-06-03T08:52:25 BST" name="tearDownClass" finished-at="2024-06-03T08:52:25 BST" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- cucumber.CucumberTestRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
